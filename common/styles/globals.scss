@use 'constants/fonts' as *;
@use 'constants/reset' as *;
@use 'constants/colors' as *;
@use 'constants/typography' as *;
@use 'constants/icons' as *;
@use 'constants/layouts' as *;

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
  scroll-behavior: smooth;
}

body.mobile-menu-open {
  width: 100%;
  overflow: hidden;
}

a {
  color: inherit;
  text-decoration: none;
}

button,
a,
[role='button'] {
  &:hover {
    opacity: 0.8;
  }
}

html.lenis {
  height: auto;
}

.lenis.lenis-smooth {
  scroll-behavior: auto;
}

.lenis.lenis-smooth [data-lenis-prevent] {
  overscroll-behavior: contain;
}

.lenis.lenis-stopped {
  overflow: hidden;
}

.lenis.lenis-scrolling iframe {
  pointer-events: none;
}

.wrapper {
  /* 컨테이너 쿼리 사용을 위한 스타일 지정 */
  container-type: inline-size; // 컨테이너 쿼리 활성화 (가로 크기 기준)
  container-name: wrapper; // 컨테이너 이름 지정
  --cont-w: 1920;
  min-width: 280px;
}

/* ----- 전역 로딩 스피너 스타일 ----- */
.loaderContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: var(--foreground);
  z-index: 9999;
  animation: fadeIn 3s ease-in forwards;
}

.loaderContainer.fadeOut {
  animation: fadeOut 1s 2s ease-out forwards;
  pointer-events: none;
}

.loadingLogo {
  width: cqi(60);
  height: auto;
  margin-bottom: 0;
  filter: invert(1);
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
