---
description: scss 작성 가이드입니다.
globs:
alwaysApply: true
---

[Common]

1. 첫 앞부분은 특징적인 topic을 골라 BEM 방법론을 사용합니다.

- 예시) .list > .list\_\_item / .list\_\_title / .list\_\_desc

2. 이 topic은 가급적 가장 쉬운 단어 및 적은 수로 작성하며, 무분별한 네이밍 규칙을 늘리지 않습니다. (유지보수를 위해)
3. BEM으로 처리할 수 없는 경우, Camel 케이스를 혼합해 사용합니다. 이때, BEM이 반드시 선행되어야 하고 Camel 케이스는 부차적입니다.

- 예시) .list > .list**item > .list**itemPoint
- BEM은 2단계까지만 권장: .list > .list\_\_item
- 3단계부터는 Camel 케이스 혼합: .list > .list**item > .list**itemPoint

4. nesting 기법을 사용합니다.

- 예시) .list > &\_\_item > &Point

5. media 쿼리가 아닌, container 쿼리를 사용합니다. 사용할 때, \_function.scss의 함수를 이용하여 use/include로 사용합니다.

- 이 프로젝트는 최상위 .wrapper 클래스가 container 속성을 가지고 있어서 모든 반응형을 container 쿼리로 처리합니다.

6. tailwindCSS처럼 모든 color를 변수화해서 사용합니다. 이 때, 작성한 공통 변수는 \_colors.scss에 작성하며, 해당 페이지 내에서만 사용하는 변수는 해당 페이지 내에서 최상위 컴포넌트에 정의합니다.
7. scss작성 시, 수치값이 들어가는 경우 vw()또는 cqi() 함수를 활용하여 작성합니다. (대부분은 vw()함수입니다.) 이미 작업자가 작성해둔 함수는 건들지 않습니다. 단, 1px의 경우 의미가 없기 때문에 1px인 채로 내버려둡니다.

- 예시) width: 500px; => width: vw(500)
- 예외) border: 1px solid; => border: 1px solid; (1px는 그대로 유지)

8. font 관련은 font-vw() 또는 font-cqi()를 활용합니다. 사용 전 \_function.scss의 작성 규칙을 반드시 숙지하세요.

9. scss작성 규칙은 아래의 작성 규칙 순서에 맞게 정의합니다.
10. module.scss의 경우, 자동으로 컴포넌트 네이밍이 붙고 뒤에 난수처리가 되기 때문에, 페이지명을 topic으로 쓸 필요는 없습니다.

- Footer.module.scss를 import하면 f.list로 사용 (f는 Footer의 첫글자)
- 실제 렌더링 시 Footer_list_ckadkqkdk 형태로 자동 클래스명 생성
- 올바른 예시) .footer, .list
- 잘못된 예시) .footer, .footer\_\_list (중복 네이밍 불필요)

11. 규칙으로 이해가 안되는 케이스의 경우, 일단 작업하지 말고 먼저 물어보고 진행합니다. \*\*\*\* 제일 중요

[작성규칙 (아래의 속성 순서로 작성)]

1. content
2. opacity / visibility / display
3. display flex와 관련된 속성 / display grid와 관련된 속성 (ex. flex-wrap / justify-content / grid-templates-cols)
4. width / max-width / min-width/ height / max-height / min-height 순서
5. margin / margin-block / margin-block-start / margin-block-end / margin-inline / margin-inlnie-start / margin-inline-end / margin-top / margin-bottom / margin-left / margin-right
6. padding (위의 margin과 동일)
7. position / z-index / top / bottom / left / right
8. box-sizing
9. border
10. background / background-color / background-image / background-repeat / background-position / backgorund-size
11. font-family / font-size / font-weight / color / line-height / text-align / vertical-align / 그외 font와 관련된 부가 속성들
12. shadow 관련 속성
13. transform 관련 속성
14. transition 관련 속성
15. animation 관련 속성
16. 그 외 속성

[module css imoport 시 네이밍 규칙]

1. Footer.module.scss를 import할 경우, 맨 앞의 알파벳 f를 활용.

- 예시) f.inner / f.list

2. 여러 css import로 알파벳이 겹칠 경우, 풀네임 사용.

- 예시) Notice, News를 한번에 불러올 경우 notice.inner / news.inner
